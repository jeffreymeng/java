/*
 * Programmer: Jeffrey Meng
 * Date: Dec 6, 2017
 * Purpose:
 */

package videoStoreSystem;

public class VideoStoreSystem {
	
	
	
	public static void main(String[] args) {
		String[] name =  {"Stefan", "Dylan", "Nathan", "Kevin", "Ian", "Edgar", "Jane", "Mary", "Brian", "Jason"};
		int[] customerId = {871, 872, 873, 874, 875, 876, 878, 879, 880, 881};
		int[] movieId = {1047, 1092, 1037, 1026, 1025, 9186, 9287, 4639, 7593, 4791};
		int[] rentalCode = {1, 5, 1, 5, 5, 1, 1, 5, 1, 5};
		int[] daysCustomerHadMovie = {0, 4, 2, 6, 5, 1, 17, 3, 2, 6};
		boolean[] late = new boolean[10];//primitive boolean initializes as false
		double[] lateFee = new double[10];
		
		
		calculateLateFees();
		
		
		

		
	}

	private static void calculateLateFees() {
		for (int i = 0; i < name.length; i ++) {
			if (daysCustomerHadMovie[i] > rentalCode[i]) {
				lateFee[i] = (daysCustomerHadMovie[i] - rentalCode[i]) * (rentalCode[i] > 1 ? 0.69 : 1.49);
				//java ternary operator:       condition ? value if true : value if false
				late[i] = true;
			}
		}
		
	}
	public static void sortByCustomerId() {
		boolean swapped = true;
		
		while (swapped) {
			swapped = false;
			// go through the array. We will not go through the last element of
			// the array.
			for (int i = 0; i < customerId.length - 1; i++) {
				// check if the current element is greater than the next
				// element.
				if (customerId[i] > customerId[i + 1]) {
					// if it is, swap the two elements and all parallel elements.
					
					swap(i);
					
					
					
					
					
					// set swapped to true so the program knows to make another
					// pass through the array.
					swapped = true;
				}

			}
		}
	}
	
	public static void swap(i) {
		int intTemp;// for swapping
		String stringTemp;//one temp for each data type
		boolean booleanTemp;
		double doubleTemp;
		//not sure if this is the most efficient way
		stringTemp = name[i];
		name[i] = name[i + 1];
		name[i + 1] = stringTemp;
		
		intTemp = customerId[i];
		customerId[i] = customerId[i + 1];
		customerId[i + 1] = intTemp;
		
		intTemp = movieId[i];
		movieId[i] = movieId[i + 1];
		movieId[i + 1] = intTemp;
		
		intTemp = rentalCode[i];
		rentalCode[i] = rentalCode[i + 1];
		rentalCode[i + 1] = intTemp;
		
		intTemp = daysCustomerHadMovie[i];
		daysCustomerHadMovie[i] = daysCustomerHadMovie[i + 1];
		daysCustomerHadMovie[i + 1] = intTemp;
		
		booleanTemp = late[i];
		late[i] = late[i + 1];
		late[i + 1] = booleanTemp;
		
		doubleTemp = lateFee[i];
		lateFee[i] = lateFee[i + 1];
		lateFee[i + 1] = doubleTemp;
	}
}
